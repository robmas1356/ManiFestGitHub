//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manifest.ManifestServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://e-manifest.ir/", ConfigurationName="ManifestServiceReference.ManifestWSSoap")]
    public interface ManifestWSSoap {
        
        // CODEGEN: Generating message contract since element name Company from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertData", ReplyAction="*")]
        Manifest.ManifestServiceReference.InsertDataResponse InsertData(Manifest.ManifestServiceReference.InsertDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertData", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertDataResponse> InsertDataAsync(Manifest.ManifestServiceReference.InsertDataRequest request);
        
        // CODEGEN: Generating message contract since element name lineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertCompany", ReplyAction="*")]
        Manifest.ManifestServiceReference.InsertCompanyResponse InsertCompany(Manifest.ManifestServiceReference.InsertCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertCompanyResponse> InsertCompanyAsync(Manifest.ManifestServiceReference.InsertCompanyRequest request);
        
        // CODEGEN: Generating message contract since element name pass from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/Payment", ReplyAction="*")]
        Manifest.ManifestServiceReference.PaymentResponse Payment(Manifest.ManifestServiceReference.PaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/Payment", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.PaymentResponse> PaymentAsync(Manifest.ManifestServiceReference.PaymentRequest request);
        
        // CODEGEN: Generating message contract since element name machineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertClient", ReplyAction="*")]
        Manifest.ManifestServiceReference.InsertClientResponse InsertClient(Manifest.ManifestServiceReference.InsertClientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/InsertClient", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertClientResponse> InsertClientAsync(Manifest.ManifestServiceReference.InsertClientRequest request);
        
        // CODEGEN: Generating message contract since element name lineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/IsRenewLic", ReplyAction="*")]
        Manifest.ManifestServiceReference.IsRenewLicResponse IsRenewLic(Manifest.ManifestServiceReference.IsRenewLicRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/IsRenewLic", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.IsRenewLicResponse> IsRenewLicAsync(Manifest.ManifestServiceReference.IsRenewLicRequest request);
        
        // CODEGEN: Generating message contract since element name pass from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/UpdateManually", ReplyAction="*")]
        Manifest.ManifestServiceReference.UpdateManuallyResponse UpdateManually(Manifest.ManifestServiceReference.UpdateManuallyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/UpdateManually", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.UpdateManuallyResponse> UpdateManuallyAsync(Manifest.ManifestServiceReference.UpdateManuallyRequest request);
        
        // CODEGEN: Generating message contract since element name lineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/ExpireDate", ReplyAction="*")]
        Manifest.ManifestServiceReference.ExpireDateResponse ExpireDate(Manifest.ManifestServiceReference.ExpireDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/ExpireDate", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ExpireDateResponse> ExpireDateAsync(Manifest.ManifestServiceReference.ExpireDateRequest request);
        
        // CODEGEN: Generating message contract since element name lineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/ValidateDays", ReplyAction="*")]
        Manifest.ManifestServiceReference.ValidateDaysResponse ValidateDays(Manifest.ManifestServiceReference.ValidateDaysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/ValidateDays", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ValidateDaysResponse> ValidateDaysAsync(Manifest.ManifestServiceReference.ValidateDaysRequest request);
        
        // CODEGEN: Generating message contract since element name lineCode from namespace http://e-manifest.ir/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/CompanyName", ReplyAction="*")]
        Manifest.ManifestServiceReference.CompanyNameResponse CompanyName(Manifest.ManifestServiceReference.CompanyNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://e-manifest.ir/CompanyName", ReplyAction="*")]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.CompanyNameResponse> CompanyNameAsync(Manifest.ManifestServiceReference.CompanyNameRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertData", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertDataRequestBody Body;
        
        public InsertDataRequest() {
        }
        
        public InsertDataRequest(Manifest.ManifestServiceReference.InsertDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Company;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string LineCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string MachineCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string WinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string WinVer;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long LicenseID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int Days;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime ExpireDate;
        
        public InsertDataRequestBody() {
        }
        
        public InsertDataRequestBody(string Company, string LineCode, string MachineCode, string WinName, string WinVer, long LicenseID, int Days, System.DateTime ExpireDate) {
            this.Company = Company;
            this.LineCode = LineCode;
            this.MachineCode = MachineCode;
            this.WinName = WinName;
            this.WinVer = WinVer;
            this.LicenseID = LicenseID;
            this.Days = Days;
            this.ExpireDate = ExpireDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertDataResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertDataResponseBody Body;
        
        public InsertDataResponse() {
        }
        
        public InsertDataResponse(Manifest.ManifestServiceReference.InsertDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string InsertDataResult;
        
        public InsertDataResponseBody() {
        }
        
        public InsertDataResponseBody(string InsertDataResult) {
            this.InsertDataResult = InsertDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertCompany", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertCompanyRequestBody Body;
        
        public InsertCompanyRequest() {
        }
        
        public InsertCompanyRequest(Manifest.ManifestServiceReference.InsertCompanyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertCompanyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string lineCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string email;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string mobile;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int qty;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string uniqueCode;
        
        public InsertCompanyRequestBody() {
        }
        
        public InsertCompanyRequestBody(string lineCode, string name, string email, string mobile, int qty, string uniqueCode) {
            this.lineCode = lineCode;
            this.name = name;
            this.email = email;
            this.mobile = mobile;
            this.qty = qty;
            this.uniqueCode = uniqueCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertCompanyResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertCompanyResponseBody Body;
        
        public InsertCompanyResponse() {
        }
        
        public InsertCompanyResponse(Manifest.ManifestServiceReference.InsertCompanyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertCompanyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertCompanyResult;
        
        public InsertCompanyResponseBody() {
        }
        
        public InsertCompanyResponseBody(bool InsertCompanyResult) {
            this.InsertCompanyResult = InsertCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PaymentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Payment", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.PaymentRequestBody Body;
        
        public PaymentRequest() {
        }
        
        public PaymentRequest(Manifest.ManifestServiceReference.PaymentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class PaymentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string uniqueCode;
        
        public PaymentRequestBody() {
        }
        
        public PaymentRequestBody(string pass, string uniqueCode) {
            this.pass = pass;
            this.uniqueCode = uniqueCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PaymentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PaymentResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.PaymentResponseBody Body;
        
        public PaymentResponse() {
        }
        
        public PaymentResponse(Manifest.ManifestServiceReference.PaymentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class PaymentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool PaymentResult;
        
        public PaymentResponseBody() {
        }
        
        public PaymentResponseBody(bool PaymentResult) {
            this.PaymentResult = PaymentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertClientRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertClient", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertClientRequestBody Body;
        
        public InsertClientRequest() {
        }
        
        public InsertClientRequest(Manifest.ManifestServiceReference.InsertClientRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertClientRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string machineCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string winName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string winVer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string lineCode;
        
        public InsertClientRequestBody() {
        }
        
        public InsertClientRequestBody(string machineCode, string winName, string winVer, string userName, string lineCode) {
            this.machineCode = machineCode;
            this.winName = winName;
            this.winVer = winVer;
            this.userName = userName;
            this.lineCode = lineCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertClientResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertClientResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.InsertClientResponseBody Body;
        
        public InsertClientResponse() {
        }
        
        public InsertClientResponse(Manifest.ManifestServiceReference.InsertClientResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class InsertClientResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertClientResult;
        
        public InsertClientResponseBody() {
        }
        
        public InsertClientResponseBody(bool InsertClientResult) {
            this.InsertClientResult = InsertClientResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsRenewLicRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsRenewLic", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.IsRenewLicRequestBody Body;
        
        public IsRenewLicRequest() {
        }
        
        public IsRenewLicRequest(Manifest.ManifestServiceReference.IsRenewLicRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class IsRenewLicRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string lineCode;
        
        public IsRenewLicRequestBody() {
        }
        
        public IsRenewLicRequestBody(string lineCode) {
            this.lineCode = lineCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsRenewLicResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsRenewLicResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.IsRenewLicResponseBody Body;
        
        public IsRenewLicResponse() {
        }
        
        public IsRenewLicResponse(Manifest.ManifestServiceReference.IsRenewLicResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class IsRenewLicResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsRenewLicResult;
        
        public IsRenewLicResponseBody() {
        }
        
        public IsRenewLicResponseBody(bool IsRenewLicResult) {
            this.IsRenewLicResult = IsRenewLicResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateManuallyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateManually", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.UpdateManuallyRequestBody Body;
        
        public UpdateManuallyRequest() {
        }
        
        public UpdateManuallyRequest(Manifest.ManifestServiceReference.UpdateManuallyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class UpdateManuallyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string lineCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime ExpDate;
        
        public UpdateManuallyRequestBody() {
        }
        
        public UpdateManuallyRequestBody(string pass, string lineCode, System.DateTime ExpDate) {
            this.pass = pass;
            this.lineCode = lineCode;
            this.ExpDate = ExpDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateManuallyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateManuallyResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.UpdateManuallyResponseBody Body;
        
        public UpdateManuallyResponse() {
        }
        
        public UpdateManuallyResponse(Manifest.ManifestServiceReference.UpdateManuallyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class UpdateManuallyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UpdateManuallyResult;
        
        public UpdateManuallyResponseBody() {
        }
        
        public UpdateManuallyResponseBody(bool UpdateManuallyResult) {
            this.UpdateManuallyResult = UpdateManuallyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpireDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExpireDate", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.ExpireDateRequestBody Body;
        
        public ExpireDateRequest() {
        }
        
        public ExpireDateRequest(Manifest.ManifestServiceReference.ExpireDateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class ExpireDateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string lineCode;
        
        public ExpireDateRequestBody() {
        }
        
        public ExpireDateRequestBody(string lineCode) {
            this.lineCode = lineCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpireDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExpireDateResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.ExpireDateResponseBody Body;
        
        public ExpireDateResponse() {
        }
        
        public ExpireDateResponse(Manifest.ManifestServiceReference.ExpireDateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class ExpireDateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ExpireDateResult;
        
        public ExpireDateResponseBody() {
        }
        
        public ExpireDateResponseBody(string ExpireDateResult) {
            this.ExpireDateResult = ExpireDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateDaysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateDays", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.ValidateDaysRequestBody Body;
        
        public ValidateDaysRequest() {
        }
        
        public ValidateDaysRequest(Manifest.ManifestServiceReference.ValidateDaysRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class ValidateDaysRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string lineCode;
        
        public ValidateDaysRequestBody() {
        }
        
        public ValidateDaysRequestBody(string lineCode) {
            this.lineCode = lineCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateDaysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateDaysResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.ValidateDaysResponseBody Body;
        
        public ValidateDaysResponse() {
        }
        
        public ValidateDaysResponse(Manifest.ManifestServiceReference.ValidateDaysResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class ValidateDaysResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ValidateDaysResult;
        
        public ValidateDaysResponseBody() {
        }
        
        public ValidateDaysResponseBody(int ValidateDaysResult) {
            this.ValidateDaysResult = ValidateDaysResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CompanyNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CompanyName", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.CompanyNameRequestBody Body;
        
        public CompanyNameRequest() {
        }
        
        public CompanyNameRequest(Manifest.ManifestServiceReference.CompanyNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class CompanyNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string lineCode;
        
        public CompanyNameRequestBody() {
        }
        
        public CompanyNameRequestBody(string lineCode) {
            this.lineCode = lineCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CompanyNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CompanyNameResponse", Namespace="http://e-manifest.ir/", Order=0)]
        public Manifest.ManifestServiceReference.CompanyNameResponseBody Body;
        
        public CompanyNameResponse() {
        }
        
        public CompanyNameResponse(Manifest.ManifestServiceReference.CompanyNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://e-manifest.ir/")]
    public partial class CompanyNameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CompanyNameResult;
        
        public CompanyNameResponseBody() {
        }
        
        public CompanyNameResponseBody(string CompanyNameResult) {
            this.CompanyNameResult = CompanyNameResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ManifestWSSoapChannel : Manifest.ManifestServiceReference.ManifestWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManifestWSSoapClient : System.ServiceModel.ClientBase<Manifest.ManifestServiceReference.ManifestWSSoap>, Manifest.ManifestServiceReference.ManifestWSSoap {
        
        public ManifestWSSoapClient() {
        }
        
        public ManifestWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManifestWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManifestWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManifestWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.InsertDataResponse Manifest.ManifestServiceReference.ManifestWSSoap.InsertData(Manifest.ManifestServiceReference.InsertDataRequest request) {
            return base.Channel.InsertData(request);
        }
        
        public string InsertData(string Company, string LineCode, string MachineCode, string WinName, string WinVer, long LicenseID, int Days, System.DateTime ExpireDate) {
            Manifest.ManifestServiceReference.InsertDataRequest inValue = new Manifest.ManifestServiceReference.InsertDataRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertDataRequestBody();
            inValue.Body.Company = Company;
            inValue.Body.LineCode = LineCode;
            inValue.Body.MachineCode = MachineCode;
            inValue.Body.WinName = WinName;
            inValue.Body.WinVer = WinVer;
            inValue.Body.LicenseID = LicenseID;
            inValue.Body.Days = Days;
            inValue.Body.ExpireDate = ExpireDate;
            Manifest.ManifestServiceReference.InsertDataResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertData(inValue);
            return retVal.Body.InsertDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertDataResponse> Manifest.ManifestServiceReference.ManifestWSSoap.InsertDataAsync(Manifest.ManifestServiceReference.InsertDataRequest request) {
            return base.Channel.InsertDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertDataResponse> InsertDataAsync(string Company, string LineCode, string MachineCode, string WinName, string WinVer, long LicenseID, int Days, System.DateTime ExpireDate) {
            Manifest.ManifestServiceReference.InsertDataRequest inValue = new Manifest.ManifestServiceReference.InsertDataRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertDataRequestBody();
            inValue.Body.Company = Company;
            inValue.Body.LineCode = LineCode;
            inValue.Body.MachineCode = MachineCode;
            inValue.Body.WinName = WinName;
            inValue.Body.WinVer = WinVer;
            inValue.Body.LicenseID = LicenseID;
            inValue.Body.Days = Days;
            inValue.Body.ExpireDate = ExpireDate;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.InsertCompanyResponse Manifest.ManifestServiceReference.ManifestWSSoap.InsertCompany(Manifest.ManifestServiceReference.InsertCompanyRequest request) {
            return base.Channel.InsertCompany(request);
        }
        
        public bool InsertCompany(string lineCode, string name, string email, string mobile, int qty, string uniqueCode) {
            Manifest.ManifestServiceReference.InsertCompanyRequest inValue = new Manifest.ManifestServiceReference.InsertCompanyRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertCompanyRequestBody();
            inValue.Body.lineCode = lineCode;
            inValue.Body.name = name;
            inValue.Body.email = email;
            inValue.Body.mobile = mobile;
            inValue.Body.qty = qty;
            inValue.Body.uniqueCode = uniqueCode;
            Manifest.ManifestServiceReference.InsertCompanyResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertCompany(inValue);
            return retVal.Body.InsertCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertCompanyResponse> Manifest.ManifestServiceReference.ManifestWSSoap.InsertCompanyAsync(Manifest.ManifestServiceReference.InsertCompanyRequest request) {
            return base.Channel.InsertCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertCompanyResponse> InsertCompanyAsync(string lineCode, string name, string email, string mobile, int qty, string uniqueCode) {
            Manifest.ManifestServiceReference.InsertCompanyRequest inValue = new Manifest.ManifestServiceReference.InsertCompanyRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertCompanyRequestBody();
            inValue.Body.lineCode = lineCode;
            inValue.Body.name = name;
            inValue.Body.email = email;
            inValue.Body.mobile = mobile;
            inValue.Body.qty = qty;
            inValue.Body.uniqueCode = uniqueCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.PaymentResponse Manifest.ManifestServiceReference.ManifestWSSoap.Payment(Manifest.ManifestServiceReference.PaymentRequest request) {
            return base.Channel.Payment(request);
        }
        
        public bool Payment(string pass, string uniqueCode) {
            Manifest.ManifestServiceReference.PaymentRequest inValue = new Manifest.ManifestServiceReference.PaymentRequest();
            inValue.Body = new Manifest.ManifestServiceReference.PaymentRequestBody();
            inValue.Body.pass = pass;
            inValue.Body.uniqueCode = uniqueCode;
            Manifest.ManifestServiceReference.PaymentResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).Payment(inValue);
            return retVal.Body.PaymentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.PaymentResponse> Manifest.ManifestServiceReference.ManifestWSSoap.PaymentAsync(Manifest.ManifestServiceReference.PaymentRequest request) {
            return base.Channel.PaymentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.PaymentResponse> PaymentAsync(string pass, string uniqueCode) {
            Manifest.ManifestServiceReference.PaymentRequest inValue = new Manifest.ManifestServiceReference.PaymentRequest();
            inValue.Body = new Manifest.ManifestServiceReference.PaymentRequestBody();
            inValue.Body.pass = pass;
            inValue.Body.uniqueCode = uniqueCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).PaymentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.InsertClientResponse Manifest.ManifestServiceReference.ManifestWSSoap.InsertClient(Manifest.ManifestServiceReference.InsertClientRequest request) {
            return base.Channel.InsertClient(request);
        }
        
        public bool InsertClient(string machineCode, string winName, string winVer, string userName, string lineCode) {
            Manifest.ManifestServiceReference.InsertClientRequest inValue = new Manifest.ManifestServiceReference.InsertClientRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertClientRequestBody();
            inValue.Body.machineCode = machineCode;
            inValue.Body.winName = winName;
            inValue.Body.winVer = winVer;
            inValue.Body.userName = userName;
            inValue.Body.lineCode = lineCode;
            Manifest.ManifestServiceReference.InsertClientResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertClient(inValue);
            return retVal.Body.InsertClientResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertClientResponse> Manifest.ManifestServiceReference.ManifestWSSoap.InsertClientAsync(Manifest.ManifestServiceReference.InsertClientRequest request) {
            return base.Channel.InsertClientAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.InsertClientResponse> InsertClientAsync(string machineCode, string winName, string winVer, string userName, string lineCode) {
            Manifest.ManifestServiceReference.InsertClientRequest inValue = new Manifest.ManifestServiceReference.InsertClientRequest();
            inValue.Body = new Manifest.ManifestServiceReference.InsertClientRequestBody();
            inValue.Body.machineCode = machineCode;
            inValue.Body.winName = winName;
            inValue.Body.winVer = winVer;
            inValue.Body.userName = userName;
            inValue.Body.lineCode = lineCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).InsertClientAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.IsRenewLicResponse Manifest.ManifestServiceReference.ManifestWSSoap.IsRenewLic(Manifest.ManifestServiceReference.IsRenewLicRequest request) {
            return base.Channel.IsRenewLic(request);
        }
        
        public bool IsRenewLic(string lineCode) {
            Manifest.ManifestServiceReference.IsRenewLicRequest inValue = new Manifest.ManifestServiceReference.IsRenewLicRequest();
            inValue.Body = new Manifest.ManifestServiceReference.IsRenewLicRequestBody();
            inValue.Body.lineCode = lineCode;
            Manifest.ManifestServiceReference.IsRenewLicResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).IsRenewLic(inValue);
            return retVal.Body.IsRenewLicResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.IsRenewLicResponse> Manifest.ManifestServiceReference.ManifestWSSoap.IsRenewLicAsync(Manifest.ManifestServiceReference.IsRenewLicRequest request) {
            return base.Channel.IsRenewLicAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.IsRenewLicResponse> IsRenewLicAsync(string lineCode) {
            Manifest.ManifestServiceReference.IsRenewLicRequest inValue = new Manifest.ManifestServiceReference.IsRenewLicRequest();
            inValue.Body = new Manifest.ManifestServiceReference.IsRenewLicRequestBody();
            inValue.Body.lineCode = lineCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).IsRenewLicAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.UpdateManuallyResponse Manifest.ManifestServiceReference.ManifestWSSoap.UpdateManually(Manifest.ManifestServiceReference.UpdateManuallyRequest request) {
            return base.Channel.UpdateManually(request);
        }
        
        public bool UpdateManually(string pass, string lineCode, System.DateTime ExpDate) {
            Manifest.ManifestServiceReference.UpdateManuallyRequest inValue = new Manifest.ManifestServiceReference.UpdateManuallyRequest();
            inValue.Body = new Manifest.ManifestServiceReference.UpdateManuallyRequestBody();
            inValue.Body.pass = pass;
            inValue.Body.lineCode = lineCode;
            inValue.Body.ExpDate = ExpDate;
            Manifest.ManifestServiceReference.UpdateManuallyResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).UpdateManually(inValue);
            return retVal.Body.UpdateManuallyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.UpdateManuallyResponse> Manifest.ManifestServiceReference.ManifestWSSoap.UpdateManuallyAsync(Manifest.ManifestServiceReference.UpdateManuallyRequest request) {
            return base.Channel.UpdateManuallyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.UpdateManuallyResponse> UpdateManuallyAsync(string pass, string lineCode, System.DateTime ExpDate) {
            Manifest.ManifestServiceReference.UpdateManuallyRequest inValue = new Manifest.ManifestServiceReference.UpdateManuallyRequest();
            inValue.Body = new Manifest.ManifestServiceReference.UpdateManuallyRequestBody();
            inValue.Body.pass = pass;
            inValue.Body.lineCode = lineCode;
            inValue.Body.ExpDate = ExpDate;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).UpdateManuallyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.ExpireDateResponse Manifest.ManifestServiceReference.ManifestWSSoap.ExpireDate(Manifest.ManifestServiceReference.ExpireDateRequest request) {
            return base.Channel.ExpireDate(request);
        }
        
        public string ExpireDate(string lineCode) {
            Manifest.ManifestServiceReference.ExpireDateRequest inValue = new Manifest.ManifestServiceReference.ExpireDateRequest();
            inValue.Body = new Manifest.ManifestServiceReference.ExpireDateRequestBody();
            inValue.Body.lineCode = lineCode;
            Manifest.ManifestServiceReference.ExpireDateResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).ExpireDate(inValue);
            return retVal.Body.ExpireDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ExpireDateResponse> Manifest.ManifestServiceReference.ManifestWSSoap.ExpireDateAsync(Manifest.ManifestServiceReference.ExpireDateRequest request) {
            return base.Channel.ExpireDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ExpireDateResponse> ExpireDateAsync(string lineCode) {
            Manifest.ManifestServiceReference.ExpireDateRequest inValue = new Manifest.ManifestServiceReference.ExpireDateRequest();
            inValue.Body = new Manifest.ManifestServiceReference.ExpireDateRequestBody();
            inValue.Body.lineCode = lineCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).ExpireDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.ValidateDaysResponse Manifest.ManifestServiceReference.ManifestWSSoap.ValidateDays(Manifest.ManifestServiceReference.ValidateDaysRequest request) {
            return base.Channel.ValidateDays(request);
        }
        
        public int ValidateDays(string lineCode) {
            Manifest.ManifestServiceReference.ValidateDaysRequest inValue = new Manifest.ManifestServiceReference.ValidateDaysRequest();
            inValue.Body = new Manifest.ManifestServiceReference.ValidateDaysRequestBody();
            inValue.Body.lineCode = lineCode;
            Manifest.ManifestServiceReference.ValidateDaysResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).ValidateDays(inValue);
            return retVal.Body.ValidateDaysResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ValidateDaysResponse> Manifest.ManifestServiceReference.ManifestWSSoap.ValidateDaysAsync(Manifest.ManifestServiceReference.ValidateDaysRequest request) {
            return base.Channel.ValidateDaysAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.ValidateDaysResponse> ValidateDaysAsync(string lineCode) {
            Manifest.ManifestServiceReference.ValidateDaysRequest inValue = new Manifest.ManifestServiceReference.ValidateDaysRequest();
            inValue.Body = new Manifest.ManifestServiceReference.ValidateDaysRequestBody();
            inValue.Body.lineCode = lineCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).ValidateDaysAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Manifest.ManifestServiceReference.CompanyNameResponse Manifest.ManifestServiceReference.ManifestWSSoap.CompanyName(Manifest.ManifestServiceReference.CompanyNameRequest request) {
            return base.Channel.CompanyName(request);
        }
        
        public string CompanyName(string lineCode) {
            Manifest.ManifestServiceReference.CompanyNameRequest inValue = new Manifest.ManifestServiceReference.CompanyNameRequest();
            inValue.Body = new Manifest.ManifestServiceReference.CompanyNameRequestBody();
            inValue.Body.lineCode = lineCode;
            Manifest.ManifestServiceReference.CompanyNameResponse retVal = ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).CompanyName(inValue);
            return retVal.Body.CompanyNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Manifest.ManifestServiceReference.CompanyNameResponse> Manifest.ManifestServiceReference.ManifestWSSoap.CompanyNameAsync(Manifest.ManifestServiceReference.CompanyNameRequest request) {
            return base.Channel.CompanyNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Manifest.ManifestServiceReference.CompanyNameResponse> CompanyNameAsync(string lineCode) {
            Manifest.ManifestServiceReference.CompanyNameRequest inValue = new Manifest.ManifestServiceReference.CompanyNameRequest();
            inValue.Body = new Manifest.ManifestServiceReference.CompanyNameRequestBody();
            inValue.Body.lineCode = lineCode;
            return ((Manifest.ManifestServiceReference.ManifestWSSoap)(this)).CompanyNameAsync(inValue);
        }
    }
}
